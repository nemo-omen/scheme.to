:root {
   font-family: "Atkinson Hyperlegible", sans-serif;
}

html,
body {
   font-size: 1em;
}

body {
   background: var(--background);
   color: var(--foreground);
}

header,
#content,
footer {
   margin: 0 auto;
}

header {
   margin-top: 2rem;
}

#content {
   margin: 4rem auto;
   display: flex;
   gap: 4rem;
}

main {
   width: 100%;
}

button,
a {
   cursor: pointer;
   text-decoration: none;
}

[href] {
   color: currentcolor;
}

a:hover {
   text-decoration: underline;
}

:focus {
   outline: 1px dashed var(--gray-1);
   outline-offset: 0.25rem;
   background-color: var(--gray-8);
}

/* HEADER */

.header-inner {
   display: flex;
   align-items: baseline;
   justify-content: center;
   gap: 1rem;
   flex-wrap: wrap;
}

.header-main-link {
   margin: 0;
   padding: 0;
   line-height: 1;
}

.header-main-link:hover {
   text-decoration: underline;
}

.header-main-link a {
   text-decoration: none;
   letter-spacing: 0.125em;
}

/* SIDEBAR */

.sidebar {
   width: 18rem;
   display: flex;
   flex-direction: column;
   gap: 2rem;
   overflow-x: hidden;
}

.sidebar-menu {
   display: flex;
   gap: 1.5rem;
   flex-direction: column;
   justify-content: center;
   list-style-type: none;
   margin: 0;
   padding: 0 0.5rem;
   height: 100%;
}

.menu-item {
   align-self: stretch;
   min-width: 100%;
   text-align: left;
   white-space: nowrap;
}

.menu-item-link {
   font-size: 1.25rem;
   letter-spacing: 0.125em;
}

.menu-toggle {
   position: fixed;
   height: 3rem;
   width: 3rem;
   border-radius: 0.5rem 0.5rem 0 0;
   border: none;
   border: 1px solid transparent;
   border-bottom: none;
   background: var(--foreground);
   color: var(--background);
   box-shadow: 0 0 30px rgb(0 0 0 30%);
   font-size: 2rem;
   font-weight: 600;
   transition: color 0.125s ease-in-out, background-color 0.125s ease-in-out, border-color 0.125s ease-in-out;
   transform: translateX(-800%);
}

/* MAIN CONTENT */

.page > * + * {
   margin-top: 4rem;
}

.planner-header,
.planner-body {
   display: grid;
   gap: 2rem;

   /*
   this is a pretty great rule that allows elements of
   a grid layout to fill the available space
   @see: https://web.dev/learn/css/grid/#auto-fill-and-auto-fit
   */
   grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

fieldset {
   border: none;
}

/* ensure fieldsets within the planner header are columns */
.planner-column fieldset {
   display: flex;
   flex-direction: column;
   gap: 0.25rem;
}

input {
   width: 100%;
   height: 100%;
   margin: 0;
   font-size: 1.5rem;
   border: none;
   background: var(--background);
   border-bottom: 1px solid var(--blur);
   padding: 0.125rem 0;
}

select {
   font-size: 1.5rem;
   border: none;
   background: var(--background);
   border-bottom: 1px solid var(--blur);
   padding: 0.125rem 0;
}

input:focus,
select:focus {
   outline-offset: -1px;
   border-bottom: 1px solid var(--focus);
}

fieldset > label {
   color: var(--blur);
   cursor: pointer;
}

/*
   Applies only to fieldsets with a focused child element
   - this is so color of label matches the color of the
   outline and border of input:focus
   @see: https://nikitahl.com/css-select-previous-element (near bottom of the post: "The last tip,"
*/
fieldset:focus-within label {
   color: var(--focus);
}

details summary,
.sidebar-header {
   background: var(--foreground);
   color: var(--background);
   padding: 0.5rem;
}

details summary {
   cursor: pointer;
}

details summary h2 {
   display: inline;
}

details summary:focus {
   background: var(--foreground);
}

.field-stack input:not(:first-of-type) {
   padding-top: 1rem;
}

.tags-group {
   justify-content: space-between;
   gap: 2rem;
}

#tags-output {
   display: flex;
   flex-wrap: wrap;
   gap: 1rem;
}

.tag {
   font-size: 1rem;
   display: flex;
   overflow: hidden;
   border: 1px solid var(--primary);
   color: var(--primary);
   border-radius: 0.25rem;
}

.tag:hover {
   border-color: var(--hover);
   color: var(--hover);
}

.tag-text {
   display: inline-block;
   padding: 0.125rem 0.25rem;
   cursor: pointer;
}

.tag button {
   border: none;
   border-left: 1px solid var(--primary);
   background: var(--background);
   color: var(--primary);
}

.tag button:hover {
   color: var(--hover);
}

/* Utility Classes */
.text-large {
   font-size: 3rem;
}

.text-medium-large {
   font-size: 2.5rem;
}

.grid {
   display: grid;
}

.flex-row {
   display: flex;
}

.flex-column {
   flex-direction: column;
}

.flex-wrap {
   flex-wrap: wrap;
}

.grid-four-wide {
   grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.sr-only {
   width: 1px;
   height: 1px;
   opacity: 0;
   position: absolute;
   left: -1000px;
   overflow: hidden;
}

.invisible {
   display: none;
}

.order-1 {
   order: 1;
}

.order-2 {
   order: 2;
}

/* Media Queries */

/* Tablet landscape -- narrower */
@media screen and (max-width: 51rem) {
   header,
   #content,
   footer {
      width: 90vw;
   }
}

/* Tablet landscape -- wider */
@media screen and (min-width: 51rem) {
   header,
   #content,
   footer {
      width: 80vw;
   }
}

/* Tablet landscape -- wider than */
@media screen and (min-width: 63rem) {
   header,
   #content,
   footer {
      width: 75vw;
   }
}

/* Desktop monitor -- wider than */
@media screen and (min-width: 80rem) {
   header,
   #content,
   footer {
      width: 70vw;
   }
}

/* Max width for horizontal header = 45rem */
@media screen and (min-width: 45rem) {
   .header-inner {
      justify-content: space-between;
   }
}

/* Narrow screens */
@media screen and (max-width: 41rem) {
   header,
   #content,
   footer {
      width: 90vw;
   }

   .header-inner {
      flex-direction: column;
      align-items: center;
   }

   .sidebar {
      position: absolute;
      top: 6rem;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100%;
      padding: 2rem;
      background: var(--background);
      z-index: 999;
      transform: translateX(-100%);
      transition: all 0.2s ease-out;
      opacity: 0;
      box-shadow: 5px 0 20px rgb(0 0 0 / 20%);
      align-items: center;
      overflow-y: auto;
   }

   .menu-item {
      text-align: center;
   }

   .menu-open {
      transform: translateX(0);
      opacity: 1;
   }

   .menu-toggle {
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      z-index: 1000;
   }

   .menu-toggle:hover {
      color: var(--foreground);
      background: var(--background);
      border-color: var(--foreground);
   }

   .menu-rule {
      display: block;
      opacity: 1;
      margin: 0 25vw;
      margin-top: 2rem;
   }
}
